<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://cxf.apache.org/jaxws 
    http://cxf.apache.org/schemas/jaxws.xsd
    http://cxf.apache.org/jaxrs
    http://cxf.apache.org/schemas/jaxrs.xsd
    http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
    http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<!-- 导入资源 -->
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

	<!-- 扫描上下文 -->
	<context:component-scan base-package="org.example.ws" />

	<!-- 属性文件配置 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:database.properties</value>
		</property>
	</bean>

	<!-- 数据源配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<!-- 指定连接数据库的驱动 -->
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="maxActive" value="${jdbc.maxActive}"></property>
		<property name="maxIdle" value="${jdbc.maxIdle}"></property>
		<property name="maxWait" value="${jdbc.maxWait}"></property>
	</bean>

	<!-- 配置sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>org.example.ws.domain.Account</value>
				<value>org.example.ws.domain.Association</value>
				<value>org.example.ws.domain.Commercial</value>
				<value>org.example.ws.domain.Coupon</value>
				<value>org.example.ws.domain.Picture</value>
				<value>org.example.ws.domain.PictureSet</value>
				<value>org.example.ws.domain.Advert</value>
				<value>org.example.ws.domain.Region</value>
				<value>org.example.ws.domain.Kind</value>
			</list>
		</property>
	</bean>

	<!-- 事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 拦击通知点配置 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="show*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="log*" propagation="REQUIRES_NEW" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- 支持 @Transactional 标记 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 自动代理 -->
	<aop:config proxy-target-class="false">
		<aop:advisor pointcut="execution(* org.example.ws.service..*ServiceImpl.*(..))"
			advice-ref="txAdvice" />
	</aop:config>
	<context:annotation-config />

	<!-- pojo转换工具 -->
	<bean id="dozerBeanMapper" class="org.dozer.DozerBeanMapper" />
	<!-- singleton="true" -->
	<bean id="dozerBeanUtil" class="org.example.ws.util.DozerBeanUtil"
		autowire="byType" />

	<!-- Dao配置 -->
	<bean id="accountDao" class="org.example.ws.dao.impl.AccountDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="associationDao" class="org.example.ws.dao.impl.AssociationDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="commercialDao" class="org.example.ws.dao.impl.CommercialDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="couponDao" class="org.example.ws.dao.impl.CouponDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="pictureDao" class="org.example.ws.dao.impl.PictureDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="pictureSetDao" class="org.example.ws.dao.impl.PictureSetDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="advertDao" class="org.example.ws.dao.impl.AdvertDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="regionDao" class="org.example.ws.dao.impl.RegionDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="kindDao" class="org.example.ws.dao.impl.KindDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="PhoneNumberDao" class="org.example.ws.dao.impl.PhoneNumberDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- Service配置 -->
	<bean id="commercialserviceimpl" class="org.example.ws.service.impl.CommercialServiceImpl" />
	<jaxrs:server id="HelloWorldRestService" address="/helloworldrest">
		<jaxrs:serviceBeans>
			<ref bean="commercialserviceimpl" />
		</jaxrs:serviceBeans>
	</jaxrs:server>

	<jaxws:server id="helloWorldService"
		serviceClass="org.example.ws.service.HelloWorldService" address="/helloworld">
		<jaxws:serviceBean>
			<bean class="org.example.ws.service.impl.HelloWorldServiceImpl" />
		</jaxws:serviceBean>
	</jaxws:server>

	<bean id="helloWorldRestBean" class="org.example.ws.service.impl.HelloWorldServiceRestImpl" />
	<jaxrs:server id="helloWorldRestService" address="/helloworldrest">
		<jaxrs:serviceBeans>
			<ref bean="helloWorldRestBean" />
		</jaxrs:serviceBeans>
	</jaxrs:server>

	<bean id="resourceLoadServiceBean" class="org.example.ws.service.impl.ResourceLoadServiceImpl" />
	<jaxrs:server id="resourceLoadService" address="/resourceloadservice">
		<jaxrs:serviceBeans>
			<ref bean="resourceLoadServiceBean" />
		</jaxrs:serviceBeans>
	</jaxrs:server>

	<bean id="couponServiceBean" class="org.example.ws.service.impl.CouponServiceImpl" />
	<jaxrs:server id="couponService" address="/couponservice">
		<jaxrs:serviceBeans>
			<ref bean="couponServiceBean" />
		</jaxrs:serviceBeans>
	</jaxrs:server>

	<bean id="commercialServiceBean" class="org.example.ws.service.impl.CommercialServiceImpl" />
	<jaxrs:server id="commercialService" address="/commercialservice">
		<jaxrs:serviceBeans>
			<ref bean="commercialServiceBean" />
		</jaxrs:serviceBeans>
	</jaxrs:server>
</beans>
